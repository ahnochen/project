{
 "Resources": {
  "testFunctionServiceRoleFEC29B6F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/testFunction/ServiceRole/Resource"
   }
  },
  "testFunction483F4CBE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ed19f957fccc0dd96acd27b0918ae347a8d4cb8fda2511ce3bb83dba80e573cc.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "testFunctionServiceRoleFEC29B6F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "testFunctionServiceRoleFEC29B6F"
   ],
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/testFunction/Resource",
    "aws:asset:path": "asset.ed19f957fccc0dd96acd27b0918ae347a8d4cb8fda2511ce3bb83dba80e573cc",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "TestFunctionPolicy44D7854A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "execute-api:Invoke",
        "execute-api:ManageConnections"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestFunctionPolicy44D7854A",
    "Roles": [
     {
      "Ref": "testFunctionServiceRoleFEC29B6F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/TestFunctionPolicy/Resource"
   }
  },
  "CloudAppRestApi9C181E83": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "CloudAppRestApi"
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Resource"
   }
  },
  "CloudAppRestApiCloudWatchRole51AD7092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/CloudWatchRole/Resource"
   }
  },
  "CloudAppRestApiAccountAC6F62E1": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "CloudAppRestApiCloudWatchRole51AD7092",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "CloudAppRestApi9C181E83"
   ],
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Account"
   }
  },
  "CloudAppRestApiDeployment59035423b729a347c1877bcf2f6b6b8ec6379cbd": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "CloudAppRestApi9C181E83"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "CloudAppRestApiOPTIONSD8FEFD0C",
    "CloudAppRestApitestGET0D5A71D8",
    "CloudAppRestApitestOPTIONS228F7F2C",
    "CloudAppRestApitest583EF2D0"
   ],
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Deployment/Resource"
   }
  },
  "CloudAppRestApiDeploymentStageprodCDD84A59": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "CloudAppRestApi9C181E83"
    },
    "DeploymentId": {
     "Ref": "CloudAppRestApiDeployment59035423b729a347c1877bcf2f6b6b8ec6379cbd"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "CloudAppRestApiAccountAC6F62E1"
   ],
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/DeploymentStage.prod/Resource"
   }
  },
  "CloudAppRestApiOPTIONSD8FEFD0C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "CloudAppRestApi9C181E83",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "CloudAppRestApi9C181E83"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,cache-control,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Default/OPTIONS/Resource"
   }
  },
  "CloudAppRestApitest583EF2D0": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CloudAppRestApi9C181E83",
      "RootResourceId"
     ]
    },
    "PathPart": "test",
    "RestApiId": {
     "Ref": "CloudAppRestApi9C181E83"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Default/test/Resource"
   }
  },
  "CloudAppRestApitestOPTIONS228F7F2C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "CloudAppRestApitest583EF2D0"
    },
    "RestApiId": {
     "Ref": "CloudAppRestApi9C181E83"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Origin,Content-Type,Fetch-Mode,Accept,X-Amz-Date,Accept-Encoding,Authorization,cache-control,SyncCenter,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Default/test/OPTIONS/Resource"
   }
  },
  "CloudAppRestApitestGETApiPermissionProjectServiceAppdevprojectServiceStackCloudAppRestApi448941D4GETtest420E0C7F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "testFunction483F4CBE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CloudAppRestApi9C181E83"
       },
       "/",
       {
        "Ref": "CloudAppRestApiDeploymentStageprodCDD84A59"
       },
       "/GET/test"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Default/test/GET/ApiPermission.ProjectServiceAppdevprojectServiceStackCloudAppRestApi448941D4.GET..test"
   }
  },
  "CloudAppRestApitestGETApiPermissionTestProjectServiceAppdevprojectServiceStackCloudAppRestApi448941D4GETtestC619C4C1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "testFunction483F4CBE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CloudAppRestApi9C181E83"
       },
       "/test-invoke-stage/GET/test"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Default/test/GET/ApiPermission.Test.ProjectServiceAppdevprojectServiceStackCloudAppRestApi448941D4.GET..test"
   }
  },
  "CloudAppRestApitestGET0D5A71D8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "CloudAppRestApitest583EF2D0"
    },
    "RestApiId": {
     "Ref": "CloudAppRestApi9C181E83"
    },
    "AuthorizationType": "AWS_IAM",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "testFunction483F4CBE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CloudAppRestApi/CloudAppRestApi/Default/test/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Q207DMAz9Ft4zow2ExGM3xBsXjQ+ostQU95JUtcNUVf13nHTAns45do594h3s7mF7Y8+8cVW76egE84dY1xotlXNn+1NlSx8qbBheMzxH74SCN2R7mI+hQ3P49BnfQ0duSnJli+G70jKjMBQJVMM+uhZlbxnNOh5mNfxNTWYce2JWtRg7UG0Fz3bSXchSDJTX/dPCuRC9mCccujD1qFSrV0r/U+eMK1FriKPDnOAF5StUqXlhv93LksyXxeT0yU++Tq23KEOU60eJH4KvSHLudDJo+PZ7+wCPeuGGiTaj5qQe4bjiD8Xyq1x9AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ProjectServiceApp-dev/projectServiceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "CloudAppRestApiEndpointF665C0AE": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CloudAppRestApi9C181E83"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CloudAppRestApiDeploymentStageprodCDD84A59"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}